---
import { categories, type Category } from '../../data/categories';
import HashtagCategory from '../ui/HashtagCategory.astro';
import CategoryPill from '../ui/CategoryPill.astro';
import { Image } from 'astro:assets';

interface ScheduleItem {
    day: string;
    time: string;
    type: string;
}

interface Props {
    title: string;
    featuredImage: any; // Changed to accept ImageMetadata from content collections
    categories: string[];
    slug?: string;
    index: number;
    address: string;
    addressDescription: string;
    schedule?: ScheduleItem[];
}

const {
    address,
    addressDescription,
    categories: locationCategories,
    featuredImage,
    index,
    slug,
    title,
    schedule,
} = Astro.props;


// Validate categories against the valid categories
const validCategories = categories.filter((category) =>
    locationCategories.some((locationCategory) => category.name === locationCategory),
);
const typeIcon = (type: string): Category | undefined => {
    return validCategories.find((category) => category.name === type)
}
---

<a
    href={`/ao/${slug}`}
    class="group flex flex-col h-full overflow-hidden bg-white rounded-lg border border-black transition-all duration-300 hover:border-primary"
    data-aos="fade-up"
    data-aos-delay={index * 100}
>
    <div
        class="relative aspect-[1/1] overflow-hidden bg-black border-black border-b group-hover:border-primary transition-colors duration-300"
    >
        {
            featuredImage && (
                <Image
                    loading={'eager'}
                    src={featuredImage}
                    alt=""
                    width={600}
                    height={600}
                    class="object-cover w-full h-full group-hover:scale-105 transition-transform duration-300"
                />
            )
        }
    </div>

    <div class="pt-4 pb-6 px-4 flex flex-col flex-grow relative">
        <h2 class="text-xl font-bold text-gray-900 group-hover:text-primary transition-colors duration-300">
            {title}
        </h2>

        <p
            class="mt-2 mb-8 text-body-base line-clamp-4 flex-grow text-small group-hover:text-gray-700 transition-colors duration-300"
        >
            {addressDescription}
        </p>

        <div class="flex flex-wrap">
            {
                schedule &&
                    schedule.map((item) => (
                        <CategoryPill
                            category={typeIcon(item.type)}
                            description={`${item.day} ${item.time}`} />
                    ))
            }
        </div>
    </div>
</a>
